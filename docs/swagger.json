{
    "swagger": "2.0",
    "info": {
        "description": "Blockstracker API",
        "title": "Blockstracker",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths": {
        "/auth/refresh": {
            "post": {
                "description": "Refreshes the access token using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refresh successful",
                        "schema": {
                            "$ref": "#/definitions/models.SignInSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Malformed Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Sign in with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in with email and password",
                "parameters": [
                    {
                        "description": "User sign in request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EmailSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User sign in successful",
                        "schema": {
                            "$ref": "#/definitions/models.SignInSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Malformed Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Credentials",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidates the user's access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign out user",
                "responses": {
                    "200": {
                        "description": "User sign out successful",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Signs up a new user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User sign up request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User creation successful",
                        "schema": {
                            "$ref": "#/definitions/models.GenericSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Malformed Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns pong",
                "tags": [
                    "example"
                ],
                "summary": "Ping example",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "post": {
                "description": "Create a new Space with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Spaces"
                ],
                "summary": "Create a new Space",
                "parameters": [
                    {
                        "description": "Space details",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSpaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateSpaceResponseForSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/tags": {
            "post": {
                "description": "Create a new tag with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create a new tag",
                "parameters": [
                    {
                        "description": "Tag details",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTagResponseForSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "description": "Create a new task with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task details",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskResponseForSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateSpaceRequest": {
            "type": "object",
            "required": [
                "createdAt",
                "modifiedAt",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateSpaceResponseForSwagger": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "result": {
                    "$ref": "#/definitions/models.Space"
                },
                "status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.CreateTagRequest": {
            "type": "object",
            "required": [
                "createdAt",
                "modifiedAt",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateTagResponseForSwagger": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "result": {
                    "$ref": "#/definitions/models.Tag"
                },
                "status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.CreateTaskRequest": {
            "type": "object",
            "required": [
                "completionStatus",
                "isActive",
                "priority",
                "schedule",
                "shouldBeScored",
                "title"
            ],
            "properties": {
                "completionStatus": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "repetitiveTaskTemplate": {
                    "$ref": "#/definitions/models.RepetitiveTaskTemplate"
                },
                "repetitiveTaskTemplateId": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "shouldBeScored": {
                    "type": "boolean"
                },
                "spaceId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "timeOfDay": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.CreateTaskResponseForSwagger": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "result": {
                    "$ref": "#/definitions/models.Task"
                },
                "status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.EmailSignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Strongpassword123"
                }
            }
        },
        "models.ErrorResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "status": {
                    "type": "string",
                    "example": "Error"
                }
            }
        },
        "models.GenericErrorResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/models.ErrorResult"
                }
            }
        },
        "models.GenericSuccessResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/models.SuccessResult"
                }
            }
        },
        "models.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "accessToken",
                "refreshToken"
            ],
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "accessToken"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "refreshToken"
                }
            }
        },
        "models.RepetitiveTaskTemplate": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "friday": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastDateOfTaskGeneration": {
                    "type": "string"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "monday": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer"
                },
                "saturday": {
                    "type": "boolean"
                },
                "schedule": {
                    "type": "string"
                },
                "shouldBeScored": {
                    "type": "boolean"
                },
                "space": {
                    "$ref": "#/definitions/models.Space"
                },
                "spaceId": {
                    "type": "integer"
                },
                "sunday": {
                    "type": "boolean"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Task"
                    }
                },
                "thursday": {
                    "type": "boolean"
                },
                "timeOfDay": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tuesday": {
                    "type": "boolean"
                },
                "wednesday": {
                    "type": "boolean"
                }
            }
        },
        "models.SignInSuccessResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/models.SignInSuccessResult"
                }
            }
        },
        "models.SignInSuccessResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.TokenResponse"
                },
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.SignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Strongpassword123"
                }
            }
        },
        "models.Space": {
            "type": "object",
            "required": [
                "createdAt",
                "modifiedAt",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success message"
                },
                "status": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "required": [
                "createdAt",
                "modifiedAt",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "required": [
                "completionStatus",
                "isActive",
                "priority",
                "schedule",
                "shouldBeScored",
                "title"
            ],
            "properties": {
                "completionStatus": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dueDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "modifiedAt": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "repetitiveTaskTemplate": {
                    "$ref": "#/definitions/models.RepetitiveTaskTemplate"
                },
                "repetitiveTaskTemplateId": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "shouldBeScored": {
                    "type": "boolean"
                },
                "space": {
                    "$ref": "#/definitions/models.Space"
                },
                "spaceId": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "timeOfDay": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "description": "Add UserID here",
                    "type": "string"
                }
            }
        },
        "models.TokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}